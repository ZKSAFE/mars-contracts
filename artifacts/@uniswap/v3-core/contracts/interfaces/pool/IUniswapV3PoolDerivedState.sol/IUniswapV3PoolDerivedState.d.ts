// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IUniswapV3PoolDerivedState$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "IUniswapV3PoolDerivedState",
  "sourceName": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32[]",
          "name": "secondsAgos",
          "type": "uint32[]"
        }
      ],
      "name": "observe",
      "outputs": [
        {
          "internalType": "int56[]",
          "name": "tickCumulatives",
          "type": "int56[]"
        },
        {
          "internalType": "uint160[]",
          "name": "secondsPerLiquidityCumulativeX128s",
          "type": "uint160[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        }
      ],
      "name": "snapshotCumulativesInside",
      "outputs": [
        {
          "internalType": "int56",
          "name": "tickCumulativeInside",
          "type": "int56"
        },
        {
          "internalType": "uint160",
          "name": "secondsPerLiquidityInsideX128",
          "type": "uint160"
        },
        {
          "internalType": "uint32",
          "name": "secondsInside",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IUniswapV3PoolDerivedState",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IUniswapV3PoolDerivedState$Type["abi"]>>;
  export function deployContract(
    contractName: "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IUniswapV3PoolDerivedState$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IUniswapV3PoolDerivedState",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IUniswapV3PoolDerivedState$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IUniswapV3PoolDerivedState$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IUniswapV3PoolDerivedState",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IUniswapV3PoolDerivedState$Type["abi"]>>;
  export function getContractAt(
    contractName: "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IUniswapV3PoolDerivedState$Type["abi"]>>;
}
