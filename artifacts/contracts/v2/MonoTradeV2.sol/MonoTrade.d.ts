// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface MonoTrade$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "MonoTrade",
  "sourceName": "contracts/v2/MonoTradeV2.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_fee",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "orderId",
          "type": "uint48"
        }
      ],
      "name": "CancelOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint48",
          "name": "orderId",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "token1In",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "token0Out",
          "type": "uint64"
        }
      ],
      "name": "MakeOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "token0Paid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "token1Gain",
          "type": "uint64"
        }
      ],
      "name": "TakeOrder",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "amount",
          "type": "uint64"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "from6Decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "orderId",
          "type": "uint48"
        }
      ],
      "name": "getOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint48",
              "name": "beforeOrderId",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "afterOrderId",
              "type": "uint48"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "amountIn",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "amountOut",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "amountInCost",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "amountOutFilled",
              "type": "uint64"
            }
          ],
          "internalType": "struct MonoTrade.Order",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "beforeOrderId",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "afterOrderId",
          "type": "uint48"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "amountIn",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "amountOut",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "amountInCost",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "amountOutFilled",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "to6Decimals",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "topOrderId",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6101006040526000805465ffffffffffff1916905534801561002057600080fd5b5060405161067b38038061067b83398101604081905261003f9161007d565b6001600160a01b03928316608052911660a05260ff1660c0523360e0526100ca565b80516001600160a01b038116811461007857600080fd5b919050565b60008060006060848603121561009257600080fd5b61009b84610061565b92506100a960208501610061565b9150604084015160ff811681146100bf57600080fd5b809150509250925092565b60805160a05160c05160e05161057961010260003960006103a5015260006103f3015260006103cc0152600060d601526105796000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806399a3bd231161006657806399a3bd231461036d578063af778f2d1461037f578063c45a0155146103a0578063d21220a7146103c7578063ddca3f43146103ee57600080fd5b806306661abd146100a35780630dfe1681146100d15780632784e815146101105780636c62ed8e146101e45780637ce219aa14610210575b600080fd5b6000546100b59065ffffffffffff1681565b60405165ffffffffffff90911681526020015b60405180910390f35b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c8565b61018b61011e366004610472565b6001602081905260009182526040909120805491015465ffffffffffff808316926601000000000000810490911691600160601b9091046001600160a01b03169067ffffffffffffffff80821691600160401b8104821691600160801b8204811691600160c01b90041687565b6040805165ffffffffffff98891681529790961660208801526001600160a01b039094169486019490945267ffffffffffffffff91821660608601528116608085015291821660a08401521660c082015260e0016100c8565b6101f76101f23660046104b7565b610427565b60405167ffffffffffffffff90911681526020016100c8565b6102f261021e366004610472565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091525065ffffffffffff908116600090815260016020818152604092839020835160e081018552815480871682526601000000000000810490961692810192909252600160601b9094046001600160a01b031692810192909252919091015467ffffffffffffffff8082166060840152600160401b820481166080840152600160801b8204811660a0840152600160c01b9091041660c082015290565b6040516100c89190815165ffffffffffff9081168252602080840151909116908201526040808301516001600160a01b03169082015260608083015167ffffffffffffffff9081169183019190915260808084015182169083015260a08084015182169083015260c092830151169181019190915260e00190565b6002546100b59065ffffffffffff1681565b61039261038d3660046104e3565b610443565b6040519081526020016100c8565b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100c8565b600061043460068361051c565b60ff1683901c90505b92915050565b600061045060068361051c565b60ff168367ffffffffffffffff16901b67ffffffffffffffff16905092915050565b60006020828403121561048457600080fd5b813565ffffffffffff8116811461049a57600080fd5b9392505050565b803560ff811681146104b257600080fd5b919050565b600080604083850312156104ca57600080fd5b823591506104da602084016104a1565b90509250929050565b600080604083850312156104f657600080fd5b823567ffffffffffffffff8116811461050e57600080fd5b91506104da602084016104a1565b60ff828116828216039081111561043d57634e487b7160e01b600052601160045260246000fdfea2646970667358221220e6cb1a23b916926e31b39afc9e3334ac649e822d2c7e34be5013459a0ce0cc6c64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806399a3bd231161006657806399a3bd231461036d578063af778f2d1461037f578063c45a0155146103a0578063d21220a7146103c7578063ddca3f43146103ee57600080fd5b806306661abd146100a35780630dfe1681146100d15780632784e815146101105780636c62ed8e146101e45780637ce219aa14610210575b600080fd5b6000546100b59065ffffffffffff1681565b60405165ffffffffffff90911681526020015b60405180910390f35b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c8565b61018b61011e366004610472565b6001602081905260009182526040909120805491015465ffffffffffff808316926601000000000000810490911691600160601b9091046001600160a01b03169067ffffffffffffffff80821691600160401b8104821691600160801b8204811691600160c01b90041687565b6040805165ffffffffffff98891681529790961660208801526001600160a01b039094169486019490945267ffffffffffffffff91821660608601528116608085015291821660a08401521660c082015260e0016100c8565b6101f76101f23660046104b7565b610427565b60405167ffffffffffffffff90911681526020016100c8565b6102f261021e366004610472565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091525065ffffffffffff908116600090815260016020818152604092839020835160e081018552815480871682526601000000000000810490961692810192909252600160601b9094046001600160a01b031692810192909252919091015467ffffffffffffffff8082166060840152600160401b820481166080840152600160801b8204811660a0840152600160c01b9091041660c082015290565b6040516100c89190815165ffffffffffff9081168252602080840151909116908201526040808301516001600160a01b03169082015260608083015167ffffffffffffffff9081169183019190915260808084015182169083015260a08084015182169083015260c092830151169181019190915260e00190565b6002546100b59065ffffffffffff1681565b61039261038d3660046104e3565b610443565b6040519081526020016100c8565b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6100f87f000000000000000000000000000000000000000000000000000000000000000081565b6104157f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100c8565b600061043460068361051c565b60ff1683901c90505b92915050565b600061045060068361051c565b60ff168367ffffffffffffffff16901b67ffffffffffffffff16905092915050565b60006020828403121561048457600080fd5b813565ffffffffffff8116811461049a57600080fd5b9392505050565b803560ff811681146104b257600080fd5b919050565b600080604083850312156104ca57600080fd5b823591506104da602084016104a1565b90509250929050565b600080604083850312156104f657600080fd5b823567ffffffffffffffff8116811461050e57600080fd5b91506104da602084016104a1565b60ff828116828216039081111561043d57634e487b7160e01b600052601160045260246000fdfea2646970667358221220e6cb1a23b916926e31b39afc9e3334ac649e822d2c7e34be5013459a0ce0cc6c64736f6c63430008180033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "contracts/v2/MonoTradeV2.sol:MonoTrade",
    constructorArgs: [_token0: AbiParameterToPrimitiveType<{"name":"_token0","type":"address"}>, _token1: AbiParameterToPrimitiveType<{"name":"_token1","type":"address"}>, _fee: AbiParameterToPrimitiveType<{"name":"_fee","type":"uint8"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MonoTrade$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "contracts/v2/MonoTradeV2.sol:MonoTrade",
    constructorArgs: [_token0: AbiParameterToPrimitiveType<{"name":"_token0","type":"address"}>, _token1: AbiParameterToPrimitiveType<{"name":"_token1","type":"address"}>, _fee: AbiParameterToPrimitiveType<{"name":"_fee","type":"uint8"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MonoTrade$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "contracts/v2/MonoTradeV2.sol:MonoTrade",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MonoTrade$Type["abi"]>>;
}
